#!/usr/bin/env ruby

require 'securerandom'
require 'iora'

# ----- command line -----

CMD   = __FILE__.split("/").last
DIR   = File.expand_path(ARGV[0])
USAGE = "Usage: #{CMD} <trial_dir>"

abort USAGE if ARGV.length != 1
abort "#{USAGE}\nERROR: #{ARGV[0]} not a directory" unless File.directory?(DIR)

# ----- filepaths -----

TRIAL_DIR = DIR
DOC_DIR   = "Meditations"
TASK_FILE = "#{TRIAL_DIR}/.trial_data/MEDITATION_TASKS.yml"
TERM_FILE = "#{TRIAL_DIR}/.trial_data/MEDITATION_TERMS.yml"
LCL_SETTINGS = File.expand_path(__dir__) + "/meditations_settings.yml"

puts "TRIAL DIR IS #{TRIAL_DIR}"

# ----- settings and libraries -----

puts "COPY MEDITATIONS SETTINGS INTO DIRECTORY #{TRIAL_DIR}/.trial_data"
system "cp #{LCL_SETTINGS} #{TRIAL_DIR}/.trial_data"

require_relative '../../exercise/Base/lib/trial_settings'
require_relative './meditations_text'

DOC_SRC  = MeditationsText.new
TIMESTAMP = Time.now.strftime("%H%M")

# ----- execution -----

Dir.chdir TS.trial_dir
system "mkdir -p #{DOC_DIR}"
system "rm -f #{DOC_DIR}/*html"
Dir.chdir DOC_DIR

def fname(idx)
  maxpad = TS.num_exercise_docs.to_s.length
  zpad = idx.to_s.rjust(maxpad, "0")
  "file#{zpad}_#{TIMESTAMP}.html"
end

puts "GENERATE DOCS INTO DIRECTORY #{TS.trial_dir}/#{DOC_DIR}"
(0..TS.meditations_num_docs).to_a.each do |idx|
  File.open(fname(idx), "w") {|f| f.puts DOC_SRC.marked_para}
  print '.'
end
puts ''

puts "GENERATE TASKS INTO FILE #{TASK_FILE}"
Dir.chdir TS.trial_dir
File.open(TASK_FILE, 'w') do |f|
  f.puts "---"
  Dir.glob("#{DOC_DIR}/*.html").each do |fn|
    title = fn.split('/').last.split('.').first
    line1 = %Q[Please remove html tags from file #{fn}.]
    link1 = %Q[<a href="http://#{TS.repo_url}">Document Repo</a>]
    links = [link1].join(" | ")
    body =  "#{line1} ( #{links} ) /#{SecureRandom.hex(3)}"
    f.puts "- title:  Strip tags from #{title}"
    f.puts "  labels: EXERCISE"
    f.puts "  body:   '#{body}'"
    print '.'
  end
end
puts ''

puts "GENERATE TERMS INTO FILE #{TERM_FILE}"
tasks = YAML.load_file(TASK_FILE)
File.open(TERM_FILE, 'w') do |f|
  f.puts "---"
  tasks.each do |task|
    f.puts "- price:  0.80"
    f.puts "  volume: 20"
    f.puts "  hexid:  #{Iora.hexid_for(task)}"
    print '.'
  end
end
puts ''

puts 'DONE'

