#!/usr/bin/env ruby

# ----- setup -----

CMD = __FILE__.split("/").last
DIR = File.expand_path(ARGV[0])
USAGE = "Usage: #{CMD} <trial_dir>"

abort USAGE if ARGV.length != 1
abort "#{USAGE}\nERROR: #{ARGV[0]} not a directory" unless File.directory?(DIR)

TRIAL_DIR       = DIR
DOC_DIR         = "Scramwords"
ANSWER_FILE     = "./.trial_data/SCRAM_ANSWERS.txt"
TASKS_FILE      = "./.trial_data/SCRAM_TASKS.yml"
PAIR_TASKS_FILE = "./.trial_data/SCRAM_PAIR_TASKS.yml"

puts "TRIAL DIR IS #{TRIAL_DIR}"
puts "DOC DIR IS #{DOC_DIR}"

require_relative '../../exercise/Base/lib/trial_settings'
require_relative './scram_data'

SCRAMBLES = ScramData.scrambles(1000)

# ----- methods -----

def body_base(scramble, level)
  base = "#{scramble.quiz}\n----------"
  hint = "HINT: word starts with '#{scramble.hint(level)}'"
  return base if level == 0
  "#{base}\n\n#{hint}"
end

def pair_doc_body(scramble, level)
  instructions = <<~EOF.gsub("\n", " ")
  TO RESOLVE THIS ISSUE: unscramble the word, and add it to the document.
  Then submit a pull-request.  The document URL is:
  EOF
  url = "#{TS.repo_url}/doc/#{scramble.quiz_fn(level)}"
  body_base(scramble, level) + "\n\n#{instructions}\n#{url}"
end

def pair_task_body(scramble, level)
  body_base(scramble, level)
end

def task_body(scramble, level)
  instructions = <<~EOF.gsub("\n", " ")
  TO RESOLVE THIS ISSUE: post the unscrambled word
  in the issue comments.
  EOF
  body_base(scramble, level) + "\n\n#{instructions}"
end

# ----- writers -----

def write_answer_line(scramble)
  File.open(ANSWER_FILE, 'a') {|f| f.puts scramble.answer_line}
end

def write_pair_doc(scramble, level)
  write_answer_line(scramble)
  fn = "./#{DOC_DIR}/#{scramble.quiz_fn(level)}"
  File.open(fn, 'w') {|f| f.puts(pair_doc_body(scramble, level))}
end

def write_pair_task(scramble, level)
  write_answer_line(scramble)
  File.open(PAIR_TASKS_FILE, 'a') do |f|
    f.puts "- title:  #{scramble.quiz_level(level)}"
    f.puts "  labels: EXERCISE HINTLEVEL_#{level} RESOLVE_WITH_PR"
    f.puts "  body:   \"#{pair_task_body(scramble, level)}\""
    f.puts ""
  end
end

def write_task(scramble, level)
  write_answer_line(scramble)
  File.open(TASKS_FILE, 'a') do |f|
    f.puts "- title:  #{scramble.quiz_level(level)}"
    f.puts "  labels: EXERCISE HINTLEVEL_#{level} RESOLVE_WITH_COMMENT"
    f.puts "  body:   \"#{task_body(scramble, level)}\""
    f.puts ""
  end
end

# ----- loops -----

def write_pairs(numpairs, maxlevel)
  (0..maxlevel).each do |level|
    SCRAMBLES.sample(numpairs).each do |scramble|
      write_pair_doc(scramble, level)
      write_pair_task(scramble, level)
      print "."
    end
  end
  puts ""
end

def write_tasks(numtasks, maxlevel)
  (0..maxlevel).each do |level|
    SCRAMBLES.sample(numtasks).each do |scramble|
      write_task(scramble, level)
      print "."
    end
  end
  puts ""
end

# ----- execution -----

Dir.chdir TS.trial_dir
system "mkdir -p #{DOC_DIR}"
system "rm -f #{DOC_DIR}/*.md"
system "mkdir -p .trial_data"
system "rm -f #{ANSWER_FILE}"
system "echo --- > #{TASKS_FILE}"
system "echo --- > #{PAIR_TASKS_FILE}"

puts "WRITING PAIRS"
write_pairs(TS.num_pairs, TS.max_hint_level)

puts "WRITING TASKS"
wite_tasks(TS.num_tasks, TS.max_hint_level)
